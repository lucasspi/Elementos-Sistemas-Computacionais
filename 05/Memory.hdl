// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
   /**
	*   address[14] | address[13] | selected
	*  --------------------------------------
	*	     0      |      0      |  RAM16K
	* 	     0      |      1      |  RAM16K
	* 	     1      |      0      |  Screen
	* 	     1      |      1      | Keyboard
	*/
	
	And16(a[0..14]=address, a[15]=true, b=true, out=nop1,
		  out[13..14]=memSel, out[0..13]=ramAddress,
		  out[0..12]=screenAddress);
	
	// Which device to load
    DMux4Way(in=load, sel=memSel,
			 a=loadRAM1, b=loadRAM2, c=loadScreen, d=nop2);
	
	Or(a=loadRAM1, b=loadRAM2, out=loadRAM);
	
	RAM16K(in=in, load=loadRAM,
		   address=ramAddress, out=outRAM);
	
	Screen(in=in, load=loadScreen,
		   address=screenAddress, out=outScreen);

	Keyboard(out=outKeyboard);
	
	// Which device to output
	Mux4Way16(a=outRAM, b=outRAM, c=outScreen, d=outKeyboard,
			  sel=memSel, out=out);
}










