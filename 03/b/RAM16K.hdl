// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13],
			 a=ram1Load, b=ram2Load, c=ram3Load, d=ram4Load);
	
	RAM4K(in=in, load=ram1Load, address=address[0..11], out=ram1Out);
	RAM4K(in=in, load=ram2Load, address=address[0..11], out=ram2Out);
	RAM4K(in=in, load=ram3Load, address=address[0..11], out=ram3Out);
	RAM4K(in=in, load=ram4Load, address=address[0..11], out=ram4Out);
	
	Mux4Way16(a=ram1Out, b=ram2Out, c=ram3Out, d=ram4Out,
			  sel=address[12..13], out=out);
}